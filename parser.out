Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> move
Rule 1     move -> GO direction
Rule 2     move -> GO num direction
Rule 3     num -> NUMBER
Rule 4     direction -> left
Rule 5     direction -> right
Rule 6     direction -> top
Rule 7     direction -> down
Rule 8     left -> LEFT
Rule 9     right -> RIGHT
Rule 10    top -> TOP
Rule 11    down -> DOWN

Terminals, with rules where they appear

DOWN                 : 11
GO                   : 1 2
LEFT                 : 8
NUMBER               : 3
RIGHT                : 9
TOP                  : 10
error                : 

Nonterminals, with rules where they appear

direction            : 1 2
down                 : 7
left                 : 4
move                 : 0
num                  : 2
right                : 5
top                  : 6

Parsing method: LALR

state 0

    (0) S' -> . move
    (1) move -> . GO direction
    (2) move -> . GO num direction

    GO              shift and go to state 1

    move                           shift and go to state 2

state 1

    (1) move -> GO . direction
    (2) move -> GO . num direction
    (4) direction -> . left
    (5) direction -> . right
    (6) direction -> . top
    (7) direction -> . down
    (3) num -> . NUMBER
    (8) left -> . LEFT
    (9) right -> . RIGHT
    (10) top -> . TOP
    (11) down -> . DOWN

    NUMBER          shift and go to state 5
    LEFT            shift and go to state 9
    RIGHT           shift and go to state 6
    TOP             shift and go to state 13
    DOWN            shift and go to state 10

    top                            shift and go to state 7
    left                           shift and go to state 3
    num                            shift and go to state 8
    direction                      shift and go to state 4
    right                          shift and go to state 11
    down                           shift and go to state 12

state 2

    (0) S' -> move .



state 3

    (4) direction -> left .

    $end            reduce using rule 4 (direction -> left .)


state 4

    (1) move -> GO direction .

    $end            reduce using rule 1 (move -> GO direction .)


state 5

    (3) num -> NUMBER .

    LEFT            reduce using rule 3 (num -> NUMBER .)
    RIGHT           reduce using rule 3 (num -> NUMBER .)
    TOP             reduce using rule 3 (num -> NUMBER .)
    DOWN            reduce using rule 3 (num -> NUMBER .)


state 6

    (9) right -> RIGHT .

    $end            reduce using rule 9 (right -> RIGHT .)


state 7

    (6) direction -> top .

    $end            reduce using rule 6 (direction -> top .)


state 8

    (2) move -> GO num . direction
    (4) direction -> . left
    (5) direction -> . right
    (6) direction -> . top
    (7) direction -> . down
    (8) left -> . LEFT
    (9) right -> . RIGHT
    (10) top -> . TOP
    (11) down -> . DOWN

    LEFT            shift and go to state 9
    RIGHT           shift and go to state 6
    TOP             shift and go to state 13
    DOWN            shift and go to state 10

    top                            shift and go to state 7
    left                           shift and go to state 3
    direction                      shift and go to state 14
    right                          shift and go to state 11
    down                           shift and go to state 12

state 9

    (8) left -> LEFT .

    $end            reduce using rule 8 (left -> LEFT .)


state 10

    (11) down -> DOWN .

    $end            reduce using rule 11 (down -> DOWN .)


state 11

    (5) direction -> right .

    $end            reduce using rule 5 (direction -> right .)


state 12

    (7) direction -> down .

    $end            reduce using rule 7 (direction -> down .)


state 13

    (10) top -> TOP .

    $end            reduce using rule 10 (top -> TOP .)


state 14

    (2) move -> GO num direction .

    $end            reduce using rule 2 (move -> GO num direction .)

