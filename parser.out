Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    NUMBER

Grammar

Rule 0     S' -> move
Rule 1     move -> GO direction
Rule 2     direction -> left
Rule 3     direction -> right
Rule 4     direction -> top
Rule 5     direction -> down
Rule 6     left -> LEFT
Rule 7     right -> RIGHT
Rule 8     top -> TOP
Rule 9     down -> DOWN

Terminals, with rules where they appear

DOWN                 : 9
GO                   : 1
LEFT                 : 6
NUMBER               : 
RIGHT                : 7
TOP                  : 8
error                : 

Nonterminals, with rules where they appear

direction            : 1
down                 : 5
left                 : 2
move                 : 0
right                : 3
top                  : 4

Parsing method: LALR

state 0

    (0) S' -> . move
    (1) move -> . GO direction

    GO              shift and go to state 2

    move                           shift and go to state 1

state 1

    (0) S' -> move .



state 2

    (1) move -> GO . direction
    (2) direction -> . left
    (3) direction -> . right
    (4) direction -> . top
    (5) direction -> . down
    (6) left -> . LEFT
    (7) right -> . RIGHT
    (8) top -> . TOP
    (9) down -> . DOWN

    LEFT            shift and go to state 6
    RIGHT           shift and go to state 7
    TOP             shift and go to state 5
    DOWN            shift and go to state 10

    direction                      shift and go to state 3
    down                           shift and go to state 4
    top                            shift and go to state 9
    right                          shift and go to state 11
    left                           shift and go to state 8

state 3

    (1) move -> GO direction .

    $end            reduce using rule 1 (move -> GO direction .)


state 4

    (5) direction -> down .

    $end            reduce using rule 5 (direction -> down .)


state 5

    (8) top -> TOP .

    $end            reduce using rule 8 (top -> TOP .)


state 6

    (6) left -> LEFT .

    $end            reduce using rule 6 (left -> LEFT .)


state 7

    (7) right -> RIGHT .

    $end            reduce using rule 7 (right -> RIGHT .)


state 8

    (2) direction -> left .

    $end            reduce using rule 2 (direction -> left .)


state 9

    (4) direction -> top .

    $end            reduce using rule 4 (direction -> top .)


state 10

    (9) down -> DOWN .

    $end            reduce using rule 9 (down -> DOWN .)


state 11

    (3) direction -> right .

    $end            reduce using rule 3 (direction -> right .)

