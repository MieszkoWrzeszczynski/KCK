
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5D2B08DF9BEBC60F521BAF835B342134'
    
_lr_action_items = {'NUMBER':([0,4,5,6,7,],[3,3,3,3,3,]),'PLUS':([2,3,8,9,10,11,],[7,-6,-4,-5,-3,-2,]),'TIMES':([2,3,8,9,10,11,],[4,-6,-4,-5,4,4,]),'$end':([1,2,3,8,9,10,11,],[0,-1,-6,-4,-5,-3,-2,]),'MINUS':([2,3,8,9,10,11,],[6,-6,-4,-5,-3,-2,]),'DIVIDE':([2,3,8,9,10,11,],[5,-6,-4,-5,5,5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,6,7,],[2,8,9,10,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','main.py',38),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',42),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',43),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',44),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',45),
  ('expression -> NUMBER','expression',1,'p_expression_number','main.py',52),
]
